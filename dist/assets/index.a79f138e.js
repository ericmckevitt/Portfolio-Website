(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerpolicy&&(n.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?n.credentials="include":s.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Zi="144",pi=0,as=1,os=2,fi=1,hs=100,ls=204,cs=205,us=3,Gi=0,Ji=300,yi=1e3,re=1001,xi=1002,ds=1006,ms=1008,ps=1009,fs=1023,ys=3e3,xs=0,ot="srgb",At="srgb-linear",qe=7680,gs=519,gi=35044;class Ie{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,a=s.length;n<a;n++)s[n].call(this,t);t.target=null}}}const D=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Zt(){const p=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(D[p&255]+D[p>>8&255]+D[p>>16&255]+D[p>>24&255]+"-"+D[t&255]+D[t>>8&255]+"-"+D[t>>16&15|64]+D[t>>24&255]+"-"+D[e&63|128]+D[e>>8&255]+"-"+D[e>>16&255]+D[e>>24&255]+D[i&255]+D[i>>8&255]+D[i>>16&255]+D[i>>24&255]).toLowerCase()}function W(p,t,e){return Math.max(t,Math.min(e,p))}function bs(p,t){return(p%t+t)%t}function Ne(p,t,e){return(1-e)*p+e*t}function ae(p,t){switch(t.constructor){case Float32Array:return p;case Uint16Array:return p/65535;case Uint8Array:return p/255;case Int16Array:return Math.max(p/32767,-1);case Int8Array:return Math.max(p/127,-1);default:throw new Error("Invalid component type.")}}function q(p,t){switch(t.constructor){case Float32Array:return p;case Uint16Array:return Math.round(p*65535);case Uint8Array:return Math.round(p*255);case Int16Array:return Math.round(p*32767);case Int8Array:return Math.round(p*127);default:throw new Error("Invalid component type.")}}class P{constructor(t=0,e=0){P.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,a=this.y-t.y;return this.x=n*i-a*s+t.x,this.y=n*s+a*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Gt{constructor(){Gt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,i,s,n,a,r,l,o){const h=this.elements;return h[0]=t,h[1]=s,h[2]=r,h[3]=e,h[4]=n,h[5]=l,h[6]=i,h[7]=a,h[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,a=i[0],r=i[3],l=i[6],o=i[1],h=i[4],c=i[7],u=i[2],d=i[5],m=i[8],f=s[0],g=s[3],y=s[6],w=s[1],A=s[4],_=s[7],M=s[2],b=s[5],z=s[8];return n[0]=a*f+r*w+l*M,n[3]=a*g+r*A+l*b,n[6]=a*y+r*_+l*z,n[1]=o*f+h*w+c*M,n[4]=o*g+h*A+c*b,n[7]=o*y+h*_+c*z,n[2]=u*f+d*w+m*M,n[5]=u*g+d*A+m*b,n[8]=u*y+d*_+m*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],o=t[7],h=t[8];return e*a*h-e*r*o-i*n*h+i*r*l+s*n*o-s*a*l}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],o=t[7],h=t[8],c=h*a-r*o,u=r*l-h*n,d=o*n-a*l,m=e*c+i*u+s*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/m;return t[0]=c*f,t[1]=(s*o-h*i)*f,t[2]=(r*i-s*a)*f,t[3]=u*f,t[4]=(h*e-s*l)*f,t[5]=(s*n-r*e)*f,t[6]=d*f,t[7]=(i*l-o*e)*f,t[8]=(a*e-i*n)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,a,r){const l=Math.cos(n),o=Math.sin(n);return this.set(i*l,i*o,-i*(l*a+o*r)+a+t,-s*o,s*l,-s*(-o*a+l*r)+r+e,0,0,1),this}scale(t,e){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){const e=Math.cos(t),i=Math.sin(t),s=this.elements,n=s[0],a=s[3],r=s[6],l=s[1],o=s[4],h=s[7];return s[0]=e*n+i*l,s[3]=e*a+i*o,s[6]=e*r+i*h,s[1]=-i*n+e*l,s[4]=-i*a+e*o,s[7]=-i*r+e*h,this}translate(t,e){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}function Ms(p){for(let t=p.length-1;t>=0;--t)if(p[t]>=65535)return!0;return!1}function bi(p){return document.createElementNS("http://www.w3.org/1999/xhtml",p)}function St(p){return p<.04045?p*.0773993808:Math.pow(p*.9478672986+.0521327014,2.4)}function Ce(p){return p<.0031308?p*12.92:1.055*Math.pow(p,.41666)-.055}const He={[ot]:{[At]:St},[At]:{[ot]:Ce}},J={legacyMode:!0,get workingColorSpace(){return At},set workingColorSpace(p){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(p,t,e){if(this.legacyMode||t===e||!t||!e)return p;if(He[t]&&He[t][e]!==void 0){const i=He[t][e];return p.r=i(p.r),p.g=i(p.g),p.b=i(p.b),p}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(p,t){return this.convert(p,this.workingColorSpace,t)},toWorkingColorSpace:function(p,t){return this.convert(p,t,this.workingColorSpace)}},$i={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},E={r:0,g:0,b:0},$={h:0,s:0,l:0},oe={h:0,s:0,l:0};function We(p,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?p+(t-p)*6*e:e<1/2?t:e<2/3?p+(t-p)*6*(2/3-e):p}function he(p,t){return t.r=p.r,t.g=p.g,t.b=p.b,t}class Mt{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&i===void 0?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ot){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,J.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=At){return this.r=t,this.g=e,this.b=i,J.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=At){if(t=bs(t,1),e=W(e,0,1),i=W(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,a=2*i-n;this.r=We(a,n,t+1/3),this.g=We(a,n,t),this.b=We(a,n,t-1/3)}return J.toWorkingColorSpace(this,s),this}setStyle(t,e=ot){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let n;const a=s[1],r=s[2];switch(a){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,J.toWorkingColorSpace(this,e),i(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,J.toWorkingColorSpace(this,e),i(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const l=parseFloat(n[1])/360,o=parseFloat(n[2])/100,h=parseFloat(n[3])/100;return i(n[4]),this.setHSL(l,o,h,e)}break}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],a=n.length;if(a===3)return this.r=parseInt(n.charAt(0)+n.charAt(0),16)/255,this.g=parseInt(n.charAt(1)+n.charAt(1),16)/255,this.b=parseInt(n.charAt(2)+n.charAt(2),16)/255,J.toWorkingColorSpace(this,e),this;if(a===6)return this.r=parseInt(n.charAt(0)+n.charAt(1),16)/255,this.g=parseInt(n.charAt(2)+n.charAt(3),16)/255,this.b=parseInt(n.charAt(4)+n.charAt(5),16)/255,J.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=ot){const i=$i[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=St(t.r),this.g=St(t.g),this.b=St(t.b),this}copyLinearToSRGB(t){return this.r=Ce(t.r),this.g=Ce(t.g),this.b=Ce(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ot){return J.fromWorkingColorSpace(he(this,E),t),W(E.r*255,0,255)<<16^W(E.g*255,0,255)<<8^W(E.b*255,0,255)<<0}getHexString(t=ot){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=At){J.fromWorkingColorSpace(he(this,E),e);const i=E.r,s=E.g,n=E.b,a=Math.max(i,s,n),r=Math.min(i,s,n);let l,o;const h=(r+a)/2;if(r===a)l=0,o=0;else{const c=a-r;switch(o=h<=.5?c/(a+r):c/(2-a-r),a){case i:l=(s-n)/c+(s<n?6:0);break;case s:l=(n-i)/c+2;break;case n:l=(i-s)/c+4;break}l/=6}return t.h=l,t.s=o,t.l=h,t}getRGB(t,e=At){return J.fromWorkingColorSpace(he(this,E),e),t.r=E.r,t.g=E.g,t.b=E.b,t}getStyle(t=ot){return J.fromWorkingColorSpace(he(this,E),t),t!==ot?`color(${t} ${E.r} ${E.g} ${E.b})`:`rgb(${E.r*255|0},${E.g*255|0},${E.b*255|0})`}offsetHSL(t,e,i){return this.getHSL($),$.h+=t,$.s+=e,$.l+=i,this.setHSL($.h,$.s,$.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL($),t.getHSL(oe);const i=Ne($.h,oe.h,e),s=Ne($.s,oe.s,e),n=Ne($.l,oe.l,e);return this.setHSL(i,s,n),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Mt.NAMES=$i;let Tt;class ws{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Tt===void 0&&(Tt=bi("canvas")),Tt.width=t.width,Tt.height=t.height;const i=Tt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Tt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=bi("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let a=0;a<n.length;a++)n[a]=St(n[a]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(St(e[i]/255)*255):e[i]=St(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class _s{constructor(t=null){this.isSource=!0,this.uuid=Zt(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let a=0,r=s.length;a<r;a++)s[a].isDataTexture?n.push(je(s[a].image)):n.push(je(s[a]))}else n=je(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function je(p){return typeof HTMLImageElement<"u"&&p instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&p instanceof ImageBitmap?ws.getDataURL(p):p.data?{data:Array.from(p.data),width:p.width,height:p.height,type:p.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let zs=0;class Xt extends Ie{constructor(t=Xt.DEFAULT_IMAGE,e=Xt.DEFAULT_MAPPING,i=re,s=re,n=ds,a=ms,r=fs,l=ps,o=1,h=ys){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:zs++}),this.uuid=Zt(),this.name="",this.source=new _s(t),this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=a,this.anisotropy=o,this.format=r,this.internalFormat=null,this.type=l,this.offset=new P(0,0),this.repeat=new P(1,1),this.center=new P(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Gt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Ji)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case yi:t.x=t.x-Math.floor(t.x);break;case re:t.x=t.x<0?0:1;break;case xi:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case yi:t.y=t.y-Math.floor(t.y);break;case re:t.y=t.y<0?0:1;break;case xi:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}Xt.DEFAULT_IMAGE=null;Xt.DEFAULT_MAPPING=Ji;class Jt{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,a,r){let l=i[s+0],o=i[s+1],h=i[s+2],c=i[s+3];const u=n[a+0],d=n[a+1],m=n[a+2],f=n[a+3];if(r===0){t[e+0]=l,t[e+1]=o,t[e+2]=h,t[e+3]=c;return}if(r===1){t[e+0]=u,t[e+1]=d,t[e+2]=m,t[e+3]=f;return}if(c!==f||l!==u||o!==d||h!==m){let g=1-r;const y=l*u+o*d+h*m+c*f,w=y>=0?1:-1,A=1-y*y;if(A>Number.EPSILON){const M=Math.sqrt(A),b=Math.atan2(M,y*w);g=Math.sin(g*b)/M,r=Math.sin(r*b)/M}const _=r*w;if(l=l*g+u*_,o=o*g+d*_,h=h*g+m*_,c=c*g+f*_,g===1-r){const M=1/Math.sqrt(l*l+o*o+h*h+c*c);l*=M,o*=M,h*=M,c*=M}}t[e]=l,t[e+1]=o,t[e+2]=h,t[e+3]=c}static multiplyQuaternionsFlat(t,e,i,s,n,a){const r=i[s],l=i[s+1],o=i[s+2],h=i[s+3],c=n[a],u=n[a+1],d=n[a+2],m=n[a+3];return t[e]=r*m+h*c+l*d-o*u,t[e+1]=l*m+h*u+o*c-r*d,t[e+2]=o*m+h*d+r*u-l*c,t[e+3]=h*m-r*c-l*u-o*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const i=t._x,s=t._y,n=t._z,a=t._order,r=Math.cos,l=Math.sin,o=r(i/2),h=r(s/2),c=r(n/2),u=l(i/2),d=l(s/2),m=l(n/2);switch(a){case"XYZ":this._x=u*h*c+o*d*m,this._y=o*d*c-u*h*m,this._z=o*h*m+u*d*c,this._w=o*h*c-u*d*m;break;case"YXZ":this._x=u*h*c+o*d*m,this._y=o*d*c-u*h*m,this._z=o*h*m-u*d*c,this._w=o*h*c+u*d*m;break;case"ZXY":this._x=u*h*c-o*d*m,this._y=o*d*c+u*h*m,this._z=o*h*m+u*d*c,this._w=o*h*c-u*d*m;break;case"ZYX":this._x=u*h*c-o*d*m,this._y=o*d*c+u*h*m,this._z=o*h*m-u*d*c,this._w=o*h*c+u*d*m;break;case"YZX":this._x=u*h*c+o*d*m,this._y=o*d*c+u*h*m,this._z=o*h*m-u*d*c,this._w=o*h*c-u*d*m;break;case"XZY":this._x=u*h*c-o*d*m,this._y=o*d*c-u*h*m,this._z=o*h*m+u*d*c,this._w=o*h*c+u*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],a=e[1],r=e[5],l=e[9],o=e[2],h=e[6],c=e[10],u=i+r+c;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(h-l)*d,this._y=(n-o)*d,this._z=(a-s)*d}else if(i>r&&i>c){const d=2*Math.sqrt(1+i-r-c);this._w=(h-l)/d,this._x=.25*d,this._y=(s+a)/d,this._z=(n+o)/d}else if(r>c){const d=2*Math.sqrt(1+r-i-c);this._w=(n-o)/d,this._x=(s+a)/d,this._y=.25*d,this._z=(l+h)/d}else{const d=2*Math.sqrt(1+c-i-r);this._w=(a-s)/d,this._x=(n+o)/d,this._y=(l+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(W(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,a=t._w,r=e._x,l=e._y,o=e._z,h=e._w;return this._x=i*h+a*r+s*o-n*l,this._y=s*h+a*l+n*r-i*o,this._z=n*h+a*o+i*l-s*r,this._w=a*h-i*r-s*l-n*o,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,a=this._w;let r=a*t._w+i*t._x+s*t._y+n*t._z;if(r<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,r=-r):this.copy(t),r>=1)return this._w=a,this._x=i,this._y=s,this._z=n,this;const l=1-r*r;if(l<=Number.EPSILON){const d=1-e;return this._w=d*a+e*this._w,this._x=d*i+e*this._x,this._y=d*s+e*this._y,this._z=d*n+e*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(l),h=Math.atan2(o,r),c=Math.sin((1-e)*h)/o,u=Math.sin(e*h)/o;return this._w=a*c+this._w*u,this._x=i*c+this._x*u,this._y=s*c+this._y*u,this._z=n*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),s=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(e*Math.cos(s),i*Math.sin(n),i*Math.cos(n),e*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,e=0,i=0){x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Mi.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Mi.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,a=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*a,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*a,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*a,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,a=t.y,r=t.z,l=t.w,o=l*e+a*s-r*i,h=l*i+r*e-n*s,c=l*s+n*i-a*e,u=-n*e-a*i-r*s;return this.x=o*l+u*-n+h*-r-c*-a,this.y=h*l+u*-a+c*-n-o*-r,this.z=c*l+u*-r+o*-a-h*-n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,a=e.x,r=e.y,l=e.z;return this.x=s*l-n*r,this.y=n*a-i*l,this.z=i*r-s*a,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Ue.copy(this).projectOnVector(t),this.sub(Ue)}reflect(t){return this.sub(Ue.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(W(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ue=new x,Mi=new Jt;class $t{constructor(t=new x(1/0,1/0,1/0),e=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,s=1/0,n=-1/0,a=-1/0,r=-1/0;for(let l=0,o=t.length;l<o;l+=3){const h=t[l],c=t[l+1],u=t[l+2];h<e&&(e=h),c<i&&(i=c),u<s&&(s=u),h>n&&(n=h),c>a&&(a=c),u>r&&(r=u)}return this.min.set(e,i,s),this.max.set(n,a,r),this}setFromBufferAttribute(t){let e=1/0,i=1/0,s=1/0,n=-1/0,a=-1/0,r=-1/0;for(let l=0,o=t.count;l<o;l++){const h=t.getX(l),c=t.getY(l),u=t.getZ(l);h<e&&(e=h),c<i&&(i=c),u<s&&(s=u),h>n&&(n=h),c>a&&(a=c),u>r&&(r=u)}return this.min.set(e,i,s),this.max.set(n,a,r),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=wt.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0)if(e&&i.attributes!=null&&i.attributes.position!==void 0){const n=i.attributes.position;for(let a=0,r=n.count;a<r;a++)wt.fromBufferAttribute(n,a).applyMatrix4(t.matrixWorld),this.expandByPoint(wt)}else i.boundingBox===null&&i.computeBoundingBox(),Xe.copy(i.boundingBox),Xe.applyMatrix4(t.matrixWorld),this.union(Xe);const s=t.children;for(let n=0,a=s.length;n<a;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,wt),wt.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ht),le.subVectors(this.max,Ht),Bt.subVectors(t.a,Ht),Ct.subVectors(t.b,Ht),Rt.subVectors(t.c,Ht),mt.subVectors(Ct,Bt),pt.subVectors(Rt,Ct),_t.subVectors(Bt,Rt);let e=[0,-mt.z,mt.y,0,-pt.z,pt.y,0,-_t.z,_t.y,mt.z,0,-mt.x,pt.z,0,-pt.x,_t.z,0,-_t.x,-mt.y,mt.x,0,-pt.y,pt.x,0,-_t.y,_t.x,0];return!Ye(e,Bt,Ct,Rt,le)||(e=[1,0,0,0,1,0,0,0,1],!Ye(e,Bt,Ct,Rt,le))?!1:(ce.crossVectors(mt,pt),e=[ce.x,ce.y,ce.z],Ye(e,Bt,Ct,Rt,le))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return wt.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(wt).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(et[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),et[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),et[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),et[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),et[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),et[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),et[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),et[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(et),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const et=[new x,new x,new x,new x,new x,new x,new x,new x],wt=new x,Xe=new $t,Bt=new x,Ct=new x,Rt=new x,mt=new x,pt=new x,_t=new x,Ht=new x,le=new x,ce=new x,zt=new x;function Ye(p,t,e,i,s){for(let n=0,a=p.length-3;n<=a;n+=3){zt.fromArray(p,n);const r=s.x*Math.abs(zt.x)+s.y*Math.abs(zt.y)+s.z*Math.abs(zt.z),l=t.dot(zt),o=e.dot(zt),h=i.dot(zt);if(Math.max(-Math.max(l,o,h),Math.min(l,o,h))>r)return!1}return!0}const As=new $t,wi=new x,ue=new x,Ze=new x;class De{constructor(t=new x,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):As.setFromPoints(t).getCenter(i);let s=0;for(let n=0,a=t.length;n<a;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){Ze.subVectors(t,this.center);const e=Ze.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.add(Ze.multiplyScalar(s/i)),this.radius+=s}return this}union(t){return this.center.equals(t.center)===!0?ue.set(0,0,1).multiplyScalar(t.radius):ue.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(wi.copy(t.center).add(ue)),this.expandByPoint(wi.copy(t.center).sub(ue)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const it=new x,Ge=new x,de=new x,ft=new x,Je=new x,me=new x,$e=new x;class mi{constructor(t=new x,e=new x(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,it)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=it.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(it.copy(this.direction).multiplyScalar(e).add(this.origin),it.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){Ge.copy(t).add(e).multiplyScalar(.5),de.copy(e).sub(t).normalize(),ft.copy(this.origin).sub(Ge);const n=t.distanceTo(e)*.5,a=-this.direction.dot(de),r=ft.dot(this.direction),l=-ft.dot(de),o=ft.lengthSq(),h=Math.abs(1-a*a);let c,u,d,m;if(h>0)if(c=a*l-r,u=a*r-l,m=n*h,c>=0)if(u>=-m)if(u<=m){const f=1/h;c*=f,u*=f,d=c*(c+a*u+2*r)+u*(a*c+u+2*l)+o}else u=n,c=Math.max(0,-(a*u+r)),d=-c*c+u*(u+2*l)+o;else u=-n,c=Math.max(0,-(a*u+r)),d=-c*c+u*(u+2*l)+o;else u<=-m?(c=Math.max(0,-(-a*n+r)),u=c>0?-n:Math.min(Math.max(-n,-l),n),d=-c*c+u*(u+2*l)+o):u<=m?(c=0,u=Math.min(Math.max(-n,-l),n),d=u*(u+2*l)+o):(c=Math.max(0,-(a*n+r)),u=c>0?n:Math.min(Math.max(-n,-l),n),d=-c*c+u*(u+2*l)+o);else u=a>0?-n:n,c=Math.max(0,-(a*u+r)),d=-c*c+u*(u+2*l)+o;return i&&i.copy(this.direction).multiplyScalar(c).add(this.origin),s&&s.copy(de).multiplyScalar(u).add(Ge),d}intersectSphere(t,e){it.subVectors(t.center,this.origin);const i=it.dot(this.direction),s=it.dot(it)-i*i,n=t.radius*t.radius;if(s>n)return null;const a=Math.sqrt(n-s),r=i-a,l=i+a;return r<0&&l<0?null:r<0?this.at(l,e):this.at(r,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,a,r,l;const o=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return o>=0?(i=(t.min.x-u.x)*o,s=(t.max.x-u.x)*o):(i=(t.max.x-u.x)*o,s=(t.min.x-u.x)*o),h>=0?(n=(t.min.y-u.y)*h,a=(t.max.y-u.y)*h):(n=(t.max.y-u.y)*h,a=(t.min.y-u.y)*h),i>a||n>s||((n>i||i!==i)&&(i=n),(a<s||s!==s)&&(s=a),c>=0?(r=(t.min.z-u.z)*c,l=(t.max.z-u.z)*c):(r=(t.max.z-u.z)*c,l=(t.min.z-u.z)*c),i>l||r>s)||((r>i||i!==i)&&(i=r),(l<s||s!==s)&&(s=l),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,it)!==null}intersectTriangle(t,e,i,s,n){Je.subVectors(e,t),me.subVectors(i,t),$e.crossVectors(Je,me);let a=this.direction.dot($e),r;if(a>0){if(s)return null;r=1}else if(a<0)r=-1,a=-a;else return null;ft.subVectors(this.origin,t);const l=r*this.direction.dot(me.crossVectors(ft,me));if(l<0)return null;const o=r*this.direction.dot(Je.cross(ft));if(o<0||l+o>a)return null;const h=-r*ft.dot($e);return h<0?null:this.at(h/a,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class U{constructor(){U.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,i,s,n,a,r,l,o,h,c,u,d,m,f,g){const y=this.elements;return y[0]=t,y[4]=e,y[8]=i,y[12]=s,y[1]=n,y[5]=a,y[9]=r,y[13]=l,y[2]=o,y[6]=h,y[10]=c,y[14]=u,y[3]=d,y[7]=m,y[11]=f,y[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new U().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/kt.setFromMatrixColumn(t,0).length(),n=1/kt.setFromMatrixColumn(t,1).length(),a=1/kt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*a,e[9]=i[9]*a,e[10]=i[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,a=Math.cos(i),r=Math.sin(i),l=Math.cos(s),o=Math.sin(s),h=Math.cos(n),c=Math.sin(n);if(t.order==="XYZ"){const u=a*h,d=a*c,m=r*h,f=r*c;e[0]=l*h,e[4]=-l*c,e[8]=o,e[1]=d+m*o,e[5]=u-f*o,e[9]=-r*l,e[2]=f-u*o,e[6]=m+d*o,e[10]=a*l}else if(t.order==="YXZ"){const u=l*h,d=l*c,m=o*h,f=o*c;e[0]=u+f*r,e[4]=m*r-d,e[8]=a*o,e[1]=a*c,e[5]=a*h,e[9]=-r,e[2]=d*r-m,e[6]=f+u*r,e[10]=a*l}else if(t.order==="ZXY"){const u=l*h,d=l*c,m=o*h,f=o*c;e[0]=u-f*r,e[4]=-a*c,e[8]=m+d*r,e[1]=d+m*r,e[5]=a*h,e[9]=f-u*r,e[2]=-a*o,e[6]=r,e[10]=a*l}else if(t.order==="ZYX"){const u=a*h,d=a*c,m=r*h,f=r*c;e[0]=l*h,e[4]=m*o-d,e[8]=u*o+f,e[1]=l*c,e[5]=f*o+u,e[9]=d*o-m,e[2]=-o,e[6]=r*l,e[10]=a*l}else if(t.order==="YZX"){const u=a*l,d=a*o,m=r*l,f=r*o;e[0]=l*h,e[4]=f-u*c,e[8]=m*c+d,e[1]=c,e[5]=a*h,e[9]=-r*h,e[2]=-o*h,e[6]=d*c+m,e[10]=u-f*c}else if(t.order==="XZY"){const u=a*l,d=a*o,m=r*l,f=r*o;e[0]=l*h,e[4]=-c,e[8]=o*h,e[1]=u*c+f,e[5]=a*h,e[9]=d*c-m,e[2]=m*c-d,e[6]=r*h,e[10]=f*c+u}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ss,t,Fs)}lookAt(t,e,i){const s=this.elements;return N.subVectors(t,e),N.lengthSq()===0&&(N.z=1),N.normalize(),yt.crossVectors(i,N),yt.lengthSq()===0&&(Math.abs(i.z)===1?N.x+=1e-4:N.z+=1e-4,N.normalize(),yt.crossVectors(i,N)),yt.normalize(),pe.crossVectors(N,yt),s[0]=yt.x,s[4]=pe.x,s[8]=N.x,s[1]=yt.y,s[5]=pe.y,s[9]=N.y,s[2]=yt.z,s[6]=pe.z,s[10]=N.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,a=i[0],r=i[4],l=i[8],o=i[12],h=i[1],c=i[5],u=i[9],d=i[13],m=i[2],f=i[6],g=i[10],y=i[14],w=i[3],A=i[7],_=i[11],M=i[15],b=s[0],z=s[4],B=s[8],X=s[12],S=s[1],R=s[5],k=s[9],v=s[13],ut=s[2],I=s[6],dt=s[10],te=s[14],ee=s[3],ie=s[7],se=s[11],ne=s[15];return n[0]=a*b+r*S+l*ut+o*ee,n[4]=a*z+r*R+l*I+o*ie,n[8]=a*B+r*k+l*dt+o*se,n[12]=a*X+r*v+l*te+o*ne,n[1]=h*b+c*S+u*ut+d*ee,n[5]=h*z+c*R+u*I+d*ie,n[9]=h*B+c*k+u*dt+d*se,n[13]=h*X+c*v+u*te+d*ne,n[2]=m*b+f*S+g*ut+y*ee,n[6]=m*z+f*R+g*I+y*ie,n[10]=m*B+f*k+g*dt+y*se,n[14]=m*X+f*v+g*te+y*ne,n[3]=w*b+A*S+_*ut+M*ee,n[7]=w*z+A*R+_*I+M*ie,n[11]=w*B+A*k+_*dt+M*se,n[15]=w*X+A*v+_*te+M*ne,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],a=t[1],r=t[5],l=t[9],o=t[13],h=t[2],c=t[6],u=t[10],d=t[14],m=t[3],f=t[7],g=t[11],y=t[15];return m*(+n*l*c-s*o*c-n*r*u+i*o*u+s*r*d-i*l*d)+f*(+e*l*d-e*o*u+n*a*u-s*a*d+s*o*h-n*l*h)+g*(+e*o*c-e*r*d-n*a*c+i*a*d+n*r*h-i*o*h)+y*(-s*r*h-e*l*c+e*r*u+s*a*c-i*a*u+i*l*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],o=t[7],h=t[8],c=t[9],u=t[10],d=t[11],m=t[12],f=t[13],g=t[14],y=t[15],w=c*g*o-f*u*o+f*l*d-r*g*d-c*l*y+r*u*y,A=m*u*o-h*g*o-m*l*d+a*g*d+h*l*y-a*u*y,_=h*f*o-m*c*o+m*r*d-a*f*d-h*r*y+a*c*y,M=m*c*l-h*f*l-m*r*u+a*f*u+h*r*g-a*c*g,b=e*w+i*A+s*_+n*M;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/b;return t[0]=w*z,t[1]=(f*u*n-c*g*n-f*s*d+i*g*d+c*s*y-i*u*y)*z,t[2]=(r*g*n-f*l*n+f*s*o-i*g*o-r*s*y+i*l*y)*z,t[3]=(c*l*n-r*u*n-c*s*o+i*u*o+r*s*d-i*l*d)*z,t[4]=A*z,t[5]=(h*g*n-m*u*n+m*s*d-e*g*d-h*s*y+e*u*y)*z,t[6]=(m*l*n-a*g*n-m*s*o+e*g*o+a*s*y-e*l*y)*z,t[7]=(a*u*n-h*l*n+h*s*o-e*u*o-a*s*d+e*l*d)*z,t[8]=_*z,t[9]=(m*c*n-h*f*n-m*i*d+e*f*d+h*i*y-e*c*y)*z,t[10]=(a*f*n-m*r*n+m*i*o-e*f*o-a*i*y+e*r*y)*z,t[11]=(h*r*n-a*c*n-h*i*o+e*c*o+a*i*d-e*r*d)*z,t[12]=M*z,t[13]=(h*f*s-m*c*s+m*i*u-e*f*u-h*i*g+e*c*g)*z,t[14]=(m*r*s-a*f*s-m*i*l+e*f*l+a*i*g-e*r*g)*z,t[15]=(a*c*s-h*r*s+h*i*l-e*c*l-a*i*u+e*r*u)*z,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,a=t.x,r=t.y,l=t.z,o=n*a,h=n*r;return this.set(o*a+i,o*r-s*l,o*l+s*r,0,o*r+s*l,h*r+i,h*l-s*a,0,o*l-s*r,h*l+s*a,n*l*l+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,a){return this.set(1,i,n,0,t,1,a,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,a=e._y,r=e._z,l=e._w,o=n+n,h=a+a,c=r+r,u=n*o,d=n*h,m=n*c,f=a*h,g=a*c,y=r*c,w=l*o,A=l*h,_=l*c,M=i.x,b=i.y,z=i.z;return s[0]=(1-(f+y))*M,s[1]=(d+_)*M,s[2]=(m-A)*M,s[3]=0,s[4]=(d-_)*b,s[5]=(1-(u+y))*b,s[6]=(g+w)*b,s[7]=0,s[8]=(m+A)*z,s[9]=(g-w)*z,s[10]=(1-(u+f))*z,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=kt.set(s[0],s[1],s[2]).length();const a=kt.set(s[4],s[5],s[6]).length(),r=kt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],Q.copy(this);const o=1/n,h=1/a,c=1/r;return Q.elements[0]*=o,Q.elements[1]*=o,Q.elements[2]*=o,Q.elements[4]*=h,Q.elements[5]*=h,Q.elements[6]*=h,Q.elements[8]*=c,Q.elements[9]*=c,Q.elements[10]*=c,e.setFromRotationMatrix(Q),i.x=n,i.y=a,i.z=r,this}makePerspective(t,e,i,s,n,a){const r=this.elements,l=2*n/(e-t),o=2*n/(i-s),h=(e+t)/(e-t),c=(i+s)/(i-s),u=-(a+n)/(a-n),d=-2*a*n/(a-n);return r[0]=l,r[4]=0,r[8]=h,r[12]=0,r[1]=0,r[5]=o,r[9]=c,r[13]=0,r[2]=0,r[6]=0,r[10]=u,r[14]=d,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this}makeOrthographic(t,e,i,s,n,a){const r=this.elements,l=1/(e-t),o=1/(i-s),h=1/(a-n),c=(e+t)*l,u=(i+s)*o,d=(a+n)*h;return r[0]=2*l,r[4]=0,r[8]=0,r[12]=-c,r[1]=0,r[5]=2*o,r[9]=0,r[13]=-u,r[2]=0,r[6]=0,r[10]=-2*h,r[14]=-d,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const kt=new x,Q=new U,Ss=new x(0,0,0),Fs=new x(1,1,1),yt=new x,pe=new x,N=new x,_i=new U,zi=new Jt;class Qt{constructor(t=0,e=0,i=0,s=Qt.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],a=s[4],r=s[8],l=s[1],o=s[5],h=s[9],c=s[2],u=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(W(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(u,o),this._z=0);break;case"YXZ":this._x=Math.asin(-W(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(r,d),this._z=Math.atan2(l,o)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(W(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-c,d),this._z=Math.atan2(-a,o)):(this._y=0,this._z=Math.atan2(l,n));break;case"ZYX":this._y=Math.asin(-W(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(l,n)):(this._x=0,this._z=Math.atan2(-a,o));break;case"YZX":this._z=Math.asin(W(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,o),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(r,d));break;case"XZY":this._z=Math.asin(-W(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,o),this._y=Math.atan2(r,n)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return _i.makeRotationFromQuaternion(t),this.setFromRotationMatrix(_i,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return zi.setFromEuler(this),this.setFromQuaternion(zi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Qt.DefaultOrder="XYZ";Qt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Es{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Ts=0;const Ai=new x,vt=new Jt,st=new U,fe=new x,Wt=new x,Bs=new x,Cs=new Jt,Si=new x(1,0,0),Fi=new x(0,1,0),Ei=new x(0,0,1),Rs={type:"added"},Ti={type:"removed"};class G extends Ie{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Ts++}),this.uuid=Zt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=G.DefaultUp.clone();const t=new x,e=new Qt,i=new Jt,s=new x(1,1,1);function n(){i.setFromEuler(e,!1)}function a(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new U},normalMatrix:{value:new Gt}}),this.matrix=new U,this.matrixWorld=new U,this.matrixAutoUpdate=G.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=G.DefaultMatrixWorldAutoUpdate,this.layers=new Es,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return vt.setFromAxisAngle(t,e),this.quaternion.multiply(vt),this}rotateOnWorldAxis(t,e){return vt.setFromAxisAngle(t,e),this.quaternion.premultiply(vt),this}rotateX(t){return this.rotateOnAxis(Si,t)}rotateY(t){return this.rotateOnAxis(Fi,t)}rotateZ(t){return this.rotateOnAxis(Ei,t)}translateOnAxis(t,e){return Ai.copy(t).applyQuaternion(this.quaternion),this.position.add(Ai.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Si,t)}translateY(t){return this.translateOnAxis(Fi,t)}translateZ(t){return this.translateOnAxis(Ei,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(st.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?fe.copy(t):fe.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Wt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?st.lookAt(Wt,fe,this.up):st.lookAt(fe,Wt,this.up),this.quaternion.setFromRotationMatrix(st),s&&(st.extractRotation(s.matrixWorld),vt.setFromRotationMatrix(st),this.quaternion.premultiply(vt.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Rs)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ti)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Ti)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),st.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),st.multiply(t.parent.matrixWorld)),t.applyMatrix4(st),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const a=this.children[i].getObjectByProperty(t,e);if(a!==void 0)return a}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wt,t,Bs),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Wt,Cs,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++){const n=e[i];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let n=0,a=s.length;n<a;n++){const r=s[n];r.matrixWorldAutoUpdate===!0&&r.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function n(r,l){return r[l.uuid]===void 0&&(r[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const r=this.geometry.parameters;if(r!==void 0&&r.shapes!==void 0){const l=r.shapes;if(Array.isArray(l))for(let o=0,h=l.length;o<h;o++){const c=l[o];n(t.shapes,c)}else n(t.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const r=[];for(let l=0,o=this.material.length;l<o;l++)r.push(n(t.materials,this.material[l]));s.material=r}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let r=0;r<this.children.length;r++)s.children.push(this.children[r].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let r=0;r<this.animations.length;r++){const l=this.animations[r];s.animations.push(n(t.animations,l))}}if(e){const r=a(t.geometries),l=a(t.materials),o=a(t.textures),h=a(t.images),c=a(t.shapes),u=a(t.skeletons),d=a(t.animations),m=a(t.nodes);r.length>0&&(i.geometries=r),l.length>0&&(i.materials=l),o.length>0&&(i.textures=o),h.length>0&&(i.images=h),c.length>0&&(i.shapes=c),u.length>0&&(i.skeletons=u),d.length>0&&(i.animations=d),m.length>0&&(i.nodes=m)}return i.object=s,i;function a(r){const l=[];for(const o in r){const h=r[o];delete h.metadata,l.push(h)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}G.DefaultUp=new x(0,1,0);G.DefaultMatrixAutoUpdate=!0;G.DefaultMatrixWorldAutoUpdate=!0;const K=new x,nt=new x,Qe=new x,rt=new x,It=new x,Dt=new x,Bi=new x,Ke=new x,ti=new x,ei=new x;class lt{constructor(t=new x,e=new x,i=new x){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),K.subVectors(t,e),s.cross(K);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){K.subVectors(s,e),nt.subVectors(i,e),Qe.subVectors(t,e);const a=K.dot(K),r=K.dot(nt),l=K.dot(Qe),o=nt.dot(nt),h=nt.dot(Qe),c=a*o-r*r;if(c===0)return n.set(-2,-1,-1);const u=1/c,d=(o*l-r*h)*u,m=(a*h-r*l)*u;return n.set(1-d-m,m,d)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,rt),rt.x>=0&&rt.y>=0&&rt.x+rt.y<=1}static getUV(t,e,i,s,n,a,r,l){return this.getBarycoord(t,e,i,s,rt),l.set(0,0),l.addScaledVector(n,rt.x),l.addScaledVector(a,rt.y),l.addScaledVector(r,rt.z),l}static isFrontFacing(t,e,i,s){return K.subVectors(i,e),nt.subVectors(t,e),K.cross(nt).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return K.subVectors(this.c,this.b),nt.subVectors(this.a,this.b),K.cross(nt).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return lt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return lt.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,s,n){return lt.getUV(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return lt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return lt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let a,r;It.subVectors(s,i),Dt.subVectors(n,i),Ke.subVectors(t,i);const l=It.dot(Ke),o=Dt.dot(Ke);if(l<=0&&o<=0)return e.copy(i);ti.subVectors(t,s);const h=It.dot(ti),c=Dt.dot(ti);if(h>=0&&c<=h)return e.copy(s);const u=l*c-h*o;if(u<=0&&l>=0&&h<=0)return a=l/(l-h),e.copy(i).addScaledVector(It,a);ei.subVectors(t,n);const d=It.dot(ei),m=Dt.dot(ei);if(m>=0&&d<=m)return e.copy(n);const f=d*o-l*m;if(f<=0&&o>=0&&m<=0)return r=o/(o-m),e.copy(i).addScaledVector(Dt,r);const g=h*m-d*c;if(g<=0&&c-h>=0&&d-m>=0)return Bi.subVectors(n,s),r=(c-h)/(c-h+(d-m)),e.copy(s).addScaledVector(Bi,r);const y=1/(g+f+u);return a=f*y,r=u*y,e.copy(i).addScaledVector(It,a).addScaledVector(Dt,r)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let ks=0;class qt extends Ie{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:ks++}),this.uuid=Zt(),this.name="",this.type="Material",this.blending=fi,this.side=pi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ls,this.blendDst=cs,this.blendEquation=hs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=us,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=gs,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=qe,this.stencilZFail=qe,this.stencilZPass=qe,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const s=this[e];if(s===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==fi&&(i.blending=this.blending),this.side!==pi&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function s(n){const a=[];for(const r in n){const l=n[r];delete l.metadata,a.push(l)}return a}if(e){const n=s(t.textures),a=s(t.images);n.length>0&&(i.textures=n),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class vs extends qt{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Mt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Gi,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const F=new x,ye=new P;class Ot{constructor(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i===!0,this.usage=gi,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)ye.fromBufferAttribute(this,e),ye.applyMatrix3(t),this.setXY(e,ye.x,ye.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)F.fromBufferAttribute(this,e),F.applyMatrix3(t),this.setXYZ(e,F.x,F.y,F.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)F.fromBufferAttribute(this,e),F.applyMatrix4(t),this.setXYZ(e,F.x,F.y,F.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)F.fromBufferAttribute(this,e),F.applyNormalMatrix(t),this.setXYZ(e,F.x,F.y,F.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)F.fromBufferAttribute(this,e),F.transformDirection(t),this.setXYZ(e,F.x,F.y,F.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=ae(e,this.array)),e}setX(t,e){return this.normalized&&(e=q(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=ae(e,this.array)),e}setY(t,e){return this.normalized&&(e=q(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=ae(e,this.array)),e}setZ(t,e){return this.normalized&&(e=q(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=ae(e,this.array)),e}setW(t,e){return this.normalized&&(e=q(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=q(e,this.array),i=q(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=q(e,this.array),i=q(i,this.array),s=q(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=q(e,this.array),i=q(i,this.array),s=q(s,this.array),n=q(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==gi&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Is extends Ot{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Ds extends Ot{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class ht extends Ot{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Ls=0;const Y=new U,ii=new G,Lt=new x,H=new $t,jt=new $t,C=new x;class Ft extends Ie{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ls++}),this.uuid=Zt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ms(t)?Ds:Is)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new Gt().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Y.makeRotationFromQuaternion(t),this.applyMatrix4(Y),this}rotateX(t){return Y.makeRotationX(t),this.applyMatrix4(Y),this}rotateY(t){return Y.makeRotationY(t),this.applyMatrix4(Y),this}rotateZ(t){return Y.makeRotationZ(t),this.applyMatrix4(Y),this}translate(t,e,i){return Y.makeTranslation(t,e,i),this.applyMatrix4(Y),this}scale(t,e,i){return Y.makeScale(t,e,i),this.applyMatrix4(Y),this}lookAt(t){return ii.lookAt(t),ii.updateMatrix(),this.applyMatrix4(ii.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Lt).negate(),this.translate(Lt.x,Lt.y,Lt.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new ht(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new $t);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];H.setFromBufferAttribute(n),this.morphTargetsRelative?(C.addVectors(this.boundingBox.min,H.min),this.boundingBox.expandByPoint(C),C.addVectors(this.boundingBox.max,H.max),this.boundingBox.expandByPoint(C)):(this.boundingBox.expandByPoint(H.min),this.boundingBox.expandByPoint(H.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new De);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new x,1/0);return}if(t){const i=this.boundingSphere.center;if(H.setFromBufferAttribute(t),e)for(let n=0,a=e.length;n<a;n++){const r=e[n];jt.setFromBufferAttribute(r),this.morphTargetsRelative?(C.addVectors(H.min,jt.min),H.expandByPoint(C),C.addVectors(H.max,jt.max),H.expandByPoint(C)):(H.expandByPoint(jt.min),H.expandByPoint(jt.max))}H.getCenter(i);let s=0;for(let n=0,a=t.count;n<a;n++)C.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(C));if(e)for(let n=0,a=e.length;n<a;n++){const r=e[n],l=this.morphTargetsRelative;for(let o=0,h=r.count;o<h;o++)C.fromBufferAttribute(r,o),l&&(Lt.fromBufferAttribute(t,o),C.add(Lt)),s=Math.max(s,i.distanceToSquared(C))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.array,s=e.position.array,n=e.normal.array,a=e.uv.array,r=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ot(new Float32Array(4*r),4));const l=this.getAttribute("tangent").array,o=[],h=[];for(let S=0;S<r;S++)o[S]=new x,h[S]=new x;const c=new x,u=new x,d=new x,m=new P,f=new P,g=new P,y=new x,w=new x;function A(S,R,k){c.fromArray(s,S*3),u.fromArray(s,R*3),d.fromArray(s,k*3),m.fromArray(a,S*2),f.fromArray(a,R*2),g.fromArray(a,k*2),u.sub(c),d.sub(c),f.sub(m),g.sub(m);const v=1/(f.x*g.y-g.x*f.y);!isFinite(v)||(y.copy(u).multiplyScalar(g.y).addScaledVector(d,-f.y).multiplyScalar(v),w.copy(d).multiplyScalar(f.x).addScaledVector(u,-g.x).multiplyScalar(v),o[S].add(y),o[R].add(y),o[k].add(y),h[S].add(w),h[R].add(w),h[k].add(w))}let _=this.groups;_.length===0&&(_=[{start:0,count:i.length}]);for(let S=0,R=_.length;S<R;++S){const k=_[S],v=k.start,ut=k.count;for(let I=v,dt=v+ut;I<dt;I+=3)A(i[I+0],i[I+1],i[I+2])}const M=new x,b=new x,z=new x,B=new x;function X(S){z.fromArray(n,S*3),B.copy(z);const R=o[S];M.copy(R),M.sub(z.multiplyScalar(z.dot(R))).normalize(),b.crossVectors(B,R);const v=b.dot(h[S])<0?-1:1;l[S*4]=M.x,l[S*4+1]=M.y,l[S*4+2]=M.z,l[S*4+3]=v}for(let S=0,R=_.length;S<R;++S){const k=_[S],v=k.start,ut=k.count;for(let I=v,dt=v+ut;I<dt;I+=3)X(i[I+0]),X(i[I+1]),X(i[I+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ot(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let u=0,d=i.count;u<d;u++)i.setXYZ(u,0,0,0);const s=new x,n=new x,a=new x,r=new x,l=new x,o=new x,h=new x,c=new x;if(t)for(let u=0,d=t.count;u<d;u+=3){const m=t.getX(u+0),f=t.getX(u+1),g=t.getX(u+2);s.fromBufferAttribute(e,m),n.fromBufferAttribute(e,f),a.fromBufferAttribute(e,g),h.subVectors(a,n),c.subVectors(s,n),h.cross(c),r.fromBufferAttribute(i,m),l.fromBufferAttribute(i,f),o.fromBufferAttribute(i,g),r.add(h),l.add(h),o.add(h),i.setXYZ(m,r.x,r.y,r.z),i.setXYZ(f,l.x,l.y,l.z),i.setXYZ(g,o.x,o.y,o.z)}else for(let u=0,d=e.count;u<d;u+=3)s.fromBufferAttribute(e,u+0),n.fromBufferAttribute(e,u+1),a.fromBufferAttribute(e,u+2),h.subVectors(a,n),c.subVectors(s,n),h.cross(c),i.setXYZ(u+0,h.x,h.y,h.z),i.setXYZ(u+1,h.x,h.y,h.z),i.setXYZ(u+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)C.fromBufferAttribute(t,e),C.normalize(),t.setXYZ(e,C.x,C.y,C.z)}toNonIndexed(){function t(r,l){const o=r.array,h=r.itemSize,c=r.normalized,u=new o.constructor(l.length*h);let d=0,m=0;for(let f=0,g=l.length;f<g;f++){r.isInterleavedBufferAttribute?d=l[f]*r.data.stride+r.offset:d=l[f]*h;for(let y=0;y<h;y++)u[m++]=o[d++]}return new Ot(u,h,c)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Ft,i=this.index.array,s=this.attributes;for(const r in s){const l=s[r],o=t(l,i);e.setAttribute(r,o)}const n=this.morphAttributes;for(const r in n){const l=[],o=n[r];for(let h=0,c=o.length;h<c;h++){const u=o[h],d=t(u,i);l.push(d)}e.morphAttributes[r]=l}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let r=0,l=a.length;r<l;r++){const o=a[r];e.addGroup(o.start,o.count,o.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const o in l)l[o]!==void 0&&(t[o]=l[o]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const l in i){const o=i[l];t.data.attributes[l]=o.toJSON(t.data)}const s={};let n=!1;for(const l in this.morphAttributes){const o=this.morphAttributes[l],h=[];for(let c=0,u=o.length;c<u;c++){const d=o[c];h.push(d.toJSON(t.data))}h.length>0&&(s[l]=h,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const r=this.boundingSphere;return r!==null&&(t.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const o in s){const h=s[o];this.setAttribute(o,h.clone(e))}const n=t.morphAttributes;for(const o in n){const h=[],c=n[o];for(let u=0,d=c.length;u<d;u++)h.push(c[u].clone(e));this.morphAttributes[o]=h}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let o=0,h=a.length;o<h;o++){const c=a[o];this.addGroup(c.start,c.count,c.materialIndex)}const r=t.boundingBox;r!==null&&(this.boundingBox=r.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ci=new U,Pt=new mi,si=new De,xt=new x,gt=new x,bt=new x,ni=new x,ri=new x,ai=new x,xe=new x,ge=new x,be=new x,Me=new P,we=new P,_e=new P,oi=new x,ze=new x;class Ri extends G{constructor(t=new Ft,e=new vs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,a=s.length;n<a;n++){const r=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}}}}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;if(s===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),si.copy(i.boundingSphere),si.applyMatrix4(n),t.ray.intersectsSphere(si)===!1)||(Ci.copy(n).invert(),Pt.copy(t.ray).applyMatrix4(Ci),i.boundingBox!==null&&Pt.intersectsBox(i.boundingBox)===!1))return;let a;const r=i.index,l=i.attributes.position,o=i.morphAttributes.position,h=i.morphTargetsRelative,c=i.attributes.uv,u=i.attributes.uv2,d=i.groups,m=i.drawRange;if(r!==null)if(Array.isArray(s))for(let f=0,g=d.length;f<g;f++){const y=d[f],w=s[y.materialIndex],A=Math.max(y.start,m.start),_=Math.min(r.count,Math.min(y.start+y.count,m.start+m.count));for(let M=A,b=_;M<b;M+=3){const z=r.getX(M),B=r.getX(M+1),X=r.getX(M+2);a=Ae(this,w,t,Pt,l,o,h,c,u,z,B,X),a&&(a.faceIndex=Math.floor(M/3),a.face.materialIndex=y.materialIndex,e.push(a))}}else{const f=Math.max(0,m.start),g=Math.min(r.count,m.start+m.count);for(let y=f,w=g;y<w;y+=3){const A=r.getX(y),_=r.getX(y+1),M=r.getX(y+2);a=Ae(this,s,t,Pt,l,o,h,c,u,A,_,M),a&&(a.faceIndex=Math.floor(y/3),e.push(a))}}else if(l!==void 0)if(Array.isArray(s))for(let f=0,g=d.length;f<g;f++){const y=d[f],w=s[y.materialIndex],A=Math.max(y.start,m.start),_=Math.min(l.count,Math.min(y.start+y.count,m.start+m.count));for(let M=A,b=_;M<b;M+=3){const z=M,B=M+1,X=M+2;a=Ae(this,w,t,Pt,l,o,h,c,u,z,B,X),a&&(a.faceIndex=Math.floor(M/3),a.face.materialIndex=y.materialIndex,e.push(a))}}else{const f=Math.max(0,m.start),g=Math.min(l.count,m.start+m.count);for(let y=f,w=g;y<w;y+=3){const A=y,_=y+1,M=y+2;a=Ae(this,s,t,Pt,l,o,h,c,u,A,_,M),a&&(a.faceIndex=Math.floor(y/3),e.push(a))}}}}function Ps(p,t,e,i,s,n,a,r){let l;if(t.side===as?l=i.intersectTriangle(a,n,s,!0,r):l=i.intersectTriangle(s,n,a,t.side!==os,r),l===null)return null;ze.copy(r),ze.applyMatrix4(p.matrixWorld);const o=e.ray.origin.distanceTo(ze);return o<e.near||o>e.far?null:{distance:o,point:ze.clone(),object:p}}function Ae(p,t,e,i,s,n,a,r,l,o,h,c){xt.fromBufferAttribute(s,o),gt.fromBufferAttribute(s,h),bt.fromBufferAttribute(s,c);const u=p.morphTargetInfluences;if(n&&u){xe.set(0,0,0),ge.set(0,0,0),be.set(0,0,0);for(let m=0,f=n.length;m<f;m++){const g=u[m],y=n[m];g!==0&&(ni.fromBufferAttribute(y,o),ri.fromBufferAttribute(y,h),ai.fromBufferAttribute(y,c),a?(xe.addScaledVector(ni,g),ge.addScaledVector(ri,g),be.addScaledVector(ai,g)):(xe.addScaledVector(ni.sub(xt),g),ge.addScaledVector(ri.sub(gt),g),be.addScaledVector(ai.sub(bt),g)))}xt.add(xe),gt.add(ge),bt.add(be)}p.isSkinnedMesh&&(p.boneTransform(o,xt),p.boneTransform(h,gt),p.boneTransform(c,bt));const d=Ps(p,t,e,i,xt,gt,bt,oi);if(d){r&&(Me.fromBufferAttribute(r,o),we.fromBufferAttribute(r,h),_e.fromBufferAttribute(r,c),d.uv=lt.getUV(oi,xt,gt,bt,Me,we,_e,new P)),l&&(Me.fromBufferAttribute(l,o),we.fromBufferAttribute(l,h),_e.fromBufferAttribute(l,c),d.uv2=lt.getUV(oi,xt,gt,bt,Me,we,_e,new P));const m={a:o,b:h,c,normal:new x,materialIndex:0};lt.getNormal(xt,gt,bt,m.normal),d.face=m}return d}class Vs extends G{constructor(){super(),this.isGroup=!0,this.type="Group"}}class Re extends qt{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Mt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const ki=new x,vi=new x,Ii=new U,hi=new mi,Se=new De;class Os extends G{constructor(t=new Ft,e=new Re){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[0];for(let s=1,n=e.count;s<n;s++)ki.fromBufferAttribute(e,s-1),vi.fromBufferAttribute(e,s),i[s]=i[s-1],i[s]+=ki.distanceTo(vi);t.setAttribute("lineDistance",new ht(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,s=this.matrixWorld,n=t.params.Line.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Se.copy(i.boundingSphere),Se.applyMatrix4(s),Se.radius+=n,t.ray.intersectsSphere(Se)===!1)return;Ii.copy(s).invert(),hi.copy(t.ray).applyMatrix4(Ii);const r=n/((this.scale.x+this.scale.y+this.scale.z)/3),l=r*r,o=new x,h=new x,c=new x,u=new x,d=this.isLineSegments?2:1,m=i.index,g=i.attributes.position;if(m!==null){const y=Math.max(0,a.start),w=Math.min(m.count,a.start+a.count);for(let A=y,_=w-1;A<_;A+=d){const M=m.getX(A),b=m.getX(A+1);if(o.fromBufferAttribute(g,M),h.fromBufferAttribute(g,b),hi.distanceSqToSegment(o,h,u,c)>l)continue;u.applyMatrix4(this.matrixWorld);const B=t.ray.origin.distanceTo(u);B<t.near||B>t.far||e.push({distance:B,point:c.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}else{const y=Math.max(0,a.start),w=Math.min(g.count,a.start+a.count);for(let A=y,_=w-1;A<_;A+=d){if(o.fromBufferAttribute(g,A),h.fromBufferAttribute(g,A+1),hi.distanceSqToSegment(o,h,u,c)>l)continue;u.applyMatrix4(this.matrixWorld);const b=t.ray.origin.distanceTo(u);b<t.near||b>t.far||e.push({distance:b,point:c.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,a=s.length;n<a;n++){const r=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}}}}}const Di=new x,Li=new x;class Pi extends Os{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[];for(let s=0,n=e.count;s<n;s+=2)Di.fromBufferAttribute(e,s),Li.fromBufferAttribute(e,s+1),i[s]=s===0?0:i[s-1],i[s+1]=i[s]+Di.distanceTo(Li);t.setAttribute("lineDistance",new ht(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Ut extends qt{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Mt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Vi=new U,di=new mi,Fe=new De,Ee=new x;class li extends G{constructor(t=new Ft,e=new Ut){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,s=this.matrixWorld,n=t.params.Points.threshold,a=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Fe.copy(i.boundingSphere),Fe.applyMatrix4(s),Fe.radius+=n,t.ray.intersectsSphere(Fe)===!1)return;Vi.copy(s).invert(),di.copy(t.ray).applyMatrix4(Vi);const r=n/((this.scale.x+this.scale.y+this.scale.z)/3),l=r*r,o=i.index,c=i.attributes.position;if(o!==null){const u=Math.max(0,a.start),d=Math.min(o.count,a.start+a.count);for(let m=u,f=d;m<f;m++){const g=o.getX(m);Ee.fromBufferAttribute(c,g),Oi(Ee,g,l,s,t,e,this)}}else{const u=Math.max(0,a.start),d=Math.min(c.count,a.start+a.count);for(let m=u,f=d;m<f;m++)Ee.fromBufferAttribute(c,m),Oi(Ee,m,l,s,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,a=s.length;n<a;n++){const r=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}}}}}function Oi(p,t,e,i,s,n,a){const r=di.distanceSqToPoint(p);if(r<e){const l=new x;di.closestPointToPoint(p,l),l.applyMatrix4(i);const o=s.ray.origin.distanceTo(l);if(o<s.near||o>s.far)return;n.push({distance:o,distanceToRay:Math.sqrt(r),point:l,index:t,face:null,object:a})}}class qs extends qt{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Mt(16777215),this.specular=new Mt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Mt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xs,this.normalScale=new P(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Gi,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const qi={enabled:!1,files:{},add:function(p,t){this.enabled!==!1&&(this.files[p]=t)},get:function(p){if(this.enabled!==!1)return this.files[p]},remove:function(p){delete this.files[p]},clear:function(){this.files={}}};class Ns{constructor(t,e,i){const s=this;let n=!1,a=0,r=0,l;const o=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(h){r++,n===!1&&s.onStart!==void 0&&s.onStart(h,a,r),n=!0},this.itemEnd=function(h){a++,s.onProgress!==void 0&&s.onProgress(h,a,r),a===r&&(n=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,c){return o.push(h,c),this},this.removeHandler=function(h){const c=o.indexOf(h);return c!==-1&&o.splice(c,2),this},this.getHandler=function(h){for(let c=0,u=o.length;c<u;c+=2){const d=o[c],m=o[c+1];if(d.global&&(d.lastIndex=0),d.test(h))return m}return null}}}const Hs=new Ns;class Qi{constructor(t){this.manager=t!==void 0?t:Hs,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise(function(s,n){i.load(t,s,e,n)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const at={};class Ws extends Error{constructor(t,e){super(t),this.response=e}}class js extends Qi{constructor(t){super(t)}load(t,e,i,s){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const n=qi.get(t);if(n!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(n),this.manager.itemEnd(t)},0),n;if(at[t]!==void 0){at[t].push({onLoad:e,onProgress:i,onError:s});return}at[t]=[],at[t].push({onLoad:e,onProgress:i,onError:s});const a=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),r=this.mimeType,l=this.responseType;fetch(a).then(o=>{if(o.status===200||o.status===0){if(o.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||o.body===void 0||o.body.getReader===void 0)return o;const h=at[t],c=o.body.getReader(),u=o.headers.get("Content-Length"),d=u?parseInt(u):0,m=d!==0;let f=0;const g=new ReadableStream({start(y){w();function w(){c.read().then(({done:A,value:_})=>{if(A)y.close();else{f+=_.byteLength;const M=new ProgressEvent("progress",{lengthComputable:m,loaded:f,total:d});for(let b=0,z=h.length;b<z;b++){const B=h[b];B.onProgress&&B.onProgress(M)}y.enqueue(_),w()}})}}});return new Response(g)}else throw new Ws(`fetch for "${o.url}" responded with ${o.status}: ${o.statusText}`,o)}).then(o=>{switch(l){case"arraybuffer":return o.arrayBuffer();case"blob":return o.blob();case"document":return o.text().then(h=>new DOMParser().parseFromString(h,r));case"json":return o.json();default:if(r===void 0)return o.text();{const c=/charset="?([^;"\s]*)"?/i.exec(r),u=c&&c[1]?c[1].toLowerCase():void 0,d=new TextDecoder(u);return o.arrayBuffer().then(m=>d.decode(m))}}}).then(o=>{qi.add(t,o);const h=at[t];delete at[t];for(let c=0,u=h.length;c<u;c++){const d=h[c];d.onLoad&&d.onLoad(o)}}).catch(o=>{const h=at[t];if(h===void 0)throw this.manager.itemError(t),o;delete at[t];for(let c=0,u=h.length;c<u;c++){const d=h[c];d.onError&&d.onError(o)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Zi}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Zi);const Us=/^[og]\s*(.+)?/,Xs=/^mtllib /,Ys=/^usemtl /,Zs=/^usemap /,Ni=/\s+/,Hi=new x,ci=new x,Wi=new x,ji=new x,Z=new x,Te=new Mt;function Gs(){const p={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&this.object.fromDeclaration===!1){this.object.name=t,this.object.fromDeclaration=e!==!1;return}const i=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:e!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(s,n){const a=this._finalize(!1);a&&(a.inherited||a.groupCount<=0)&&this.materials.splice(a.index,1);const r={index:this.materials.length,name:s||"",mtllib:Array.isArray(n)&&n.length>0?n[n.length-1]:"",smooth:a!==void 0?a.smooth:this.smooth,groupStart:a!==void 0?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(l){const o={index:typeof l=="number"?l:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return o.clone=this.clone.bind(o),o}};return this.materials.push(r),r},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(s){const n=this.currentMaterial();if(n&&n.groupEnd===-1&&(n.groupEnd=this.geometry.vertices.length/3,n.groupCount=n.groupEnd-n.groupStart,n.inherited=!1),s&&this.materials.length>1)for(let a=this.materials.length-1;a>=0;a--)this.materials[a].groupCount<=0&&this.materials.splice(a,1);return s&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),n}},i&&i.name&&typeof i.clone=="function"){const s=i.clone(0);s.inherited=!0,this.object.materials.push(s)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(t,e){const i=parseInt(t,10);return(i>=0?i-1:i+e/3)*3},parseNormalIndex:function(t,e){const i=parseInt(t,10);return(i>=0?i-1:i+e/3)*3},parseUVIndex:function(t,e){const i=parseInt(t,10);return(i>=0?i-1:i+e/2)*2},addVertex:function(t,e,i){const s=this.vertices,n=this.object.geometry.vertices;n.push(s[t+0],s[t+1],s[t+2]),n.push(s[e+0],s[e+1],s[e+2]),n.push(s[i+0],s[i+1],s[i+2])},addVertexPoint:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,i){const s=this.normals,n=this.object.geometry.normals;n.push(s[t+0],s[t+1],s[t+2]),n.push(s[e+0],s[e+1],s[e+2]),n.push(s[i+0],s[i+1],s[i+2])},addFaceNormal:function(t,e,i){const s=this.vertices,n=this.object.geometry.normals;Hi.fromArray(s,t),ci.fromArray(s,e),Wi.fromArray(s,i),Z.subVectors(Wi,ci),ji.subVectors(Hi,ci),Z.cross(ji),Z.normalize(),n.push(Z.x,Z.y,Z.z),n.push(Z.x,Z.y,Z.z),n.push(Z.x,Z.y,Z.z)},addColor:function(t,e,i){const s=this.colors,n=this.object.geometry.colors;s[t]!==void 0&&n.push(s[t+0],s[t+1],s[t+2]),s[e]!==void 0&&n.push(s[e+0],s[e+1],s[e+2]),s[i]!==void 0&&n.push(s[i+0],s[i+1],s[i+2])},addUV:function(t,e,i){const s=this.uvs,n=this.object.geometry.uvs;n.push(s[t+0],s[t+1]),n.push(s[e+0],s[e+1]),n.push(s[i+0],s[i+1])},addDefaultUV:function(){const t=this.object.geometry.uvs;t.push(0,0),t.push(0,0),t.push(0,0)},addUVLine:function(t){const e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,i,s,n,a,r,l,o){const h=this.vertices.length;let c=this.parseVertexIndex(t,h),u=this.parseVertexIndex(e,h),d=this.parseVertexIndex(i,h);if(this.addVertex(c,u,d),this.addColor(c,u,d),r!==void 0&&r!==""){const m=this.normals.length;c=this.parseNormalIndex(r,m),u=this.parseNormalIndex(l,m),d=this.parseNormalIndex(o,m),this.addNormal(c,u,d)}else this.addFaceNormal(c,u,d);if(s!==void 0&&s!==""){const m=this.uvs.length;c=this.parseUVIndex(s,m),u=this.parseUVIndex(n,m),d=this.parseUVIndex(a,m),this.addUV(c,u,d),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(t){this.object.geometry.type="Points";const e=this.vertices.length;for(let i=0,s=t.length;i<s;i++){const n=this.parseVertexIndex(t[i],e);this.addVertexPoint(n),this.addColor(n)}},addLineGeometry:function(t,e){this.object.geometry.type="Line";const i=this.vertices.length,s=this.uvs.length;for(let n=0,a=t.length;n<a;n++)this.addVertexLine(this.parseVertexIndex(t[n],i));for(let n=0,a=e.length;n<a;n++)this.addUVLine(this.parseUVIndex(e[n],s))}};return p.startObject("",!1),p}class Js extends Qi{constructor(t){super(t),this.materials=null}load(t,e,i,s){const n=this,a=new js(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(r){try{e(n.parse(r))}catch(l){s?s(l):console.error(l),n.manager.itemError(t)}},i,s)}setMaterials(t){return this.materials=t,this}parse(t){const e=new Gs;t.indexOf(`\r
`)!==-1&&(t=t.replace(/\r\n/g,`
`)),t.indexOf(`\\
`)!==-1&&(t=t.replace(/\\\n/g,""));const i=t.split(`
`);let s=[];for(let r=0,l=i.length;r<l;r++){const o=i[r].trimStart();if(o.length===0)continue;const h=o.charAt(0);if(h!=="#")if(h==="v"){const c=o.split(Ni);switch(c[0]){case"v":e.vertices.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3])),c.length>=7?(Te.setRGB(parseFloat(c[4]),parseFloat(c[5]),parseFloat(c[6])).convertSRGBToLinear(),e.colors.push(Te.r,Te.g,Te.b)):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3]));break;case"vt":e.uvs.push(parseFloat(c[1]),parseFloat(c[2]));break}}else if(h==="f"){const u=o.slice(1).trim().split(Ni),d=[];for(let f=0,g=u.length;f<g;f++){const y=u[f];if(y.length>0){const w=y.split("/");d.push(w)}}const m=d[0];for(let f=1,g=d.length-1;f<g;f++){const y=d[f],w=d[f+1];e.addFace(m[0],y[0],w[0],m[1],y[1],w[1],m[2],y[2],w[2])}}else if(h==="l"){const c=o.substring(1).trim().split(" ");let u=[];const d=[];if(o.indexOf("/")===-1)u=c;else for(let m=0,f=c.length;m<f;m++){const g=c[m].split("/");g[0]!==""&&u.push(g[0]),g[1]!==""&&d.push(g[1])}e.addLineGeometry(u,d)}else if(h==="p"){const u=o.slice(1).trim().split(" ");e.addPointGeometry(u)}else if((s=Us.exec(o))!==null){const c=(" "+s[0].slice(1).trim()).slice(1);e.startObject(c)}else if(Ys.test(o))e.object.startMaterial(o.substring(7).trim(),e.materialLibraries);else if(Xs.test(o))e.materialLibraries.push(o.substring(7).trim());else if(Zs.test(o))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(h==="s"){if(s=o.split(" "),s.length>1){const u=s[1].trim().toLowerCase();e.object.smooth=u!=="0"&&u!=="off"}else e.object.smooth=!0;const c=e.object.currentMaterial();c&&(c.smooth=e.object.smooth)}else{if(o==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+o+'"')}}e.finalize();const n=new Vs;if(n.materialLibraries=[].concat(e.materialLibraries),!(e.objects.length===1&&e.objects[0].geometry.vertices.length===0)===!0)for(let r=0,l=e.objects.length;r<l;r++){const o=e.objects[r],h=o.geometry,c=o.materials,u=h.type==="Line",d=h.type==="Points";let m=!1;if(h.vertices.length===0)continue;const f=new Ft;f.setAttribute("position",new ht(h.vertices,3)),h.normals.length>0&&f.setAttribute("normal",new ht(h.normals,3)),h.colors.length>0&&(m=!0,f.setAttribute("color",new ht(h.colors,3))),h.hasUVIndices===!0&&f.setAttribute("uv",new ht(h.uvs,2));const g=[];for(let w=0,A=c.length;w<A;w++){const _=c[w],M=_.name+"_"+_.smooth+"_"+m;let b=e.materials[M];if(this.materials!==null){if(b=this.materials.create(_.name),u&&b&&!(b instanceof Re)){const z=new Re;qt.prototype.copy.call(z,b),z.color.copy(b.color),b=z}else if(d&&b&&!(b instanceof Ut)){const z=new Ut({size:10,sizeAttenuation:!1});qt.prototype.copy.call(z,b),z.color.copy(b.color),z.map=b.map,b=z}}b===void 0&&(u?b=new Re:d?b=new Ut({size:1,sizeAttenuation:!1}):b=new qs,b.name=_.name,b.flatShading=!_.smooth,b.vertexColors=m,e.materials[M]=b),g.push(b)}let y;if(g.length>1){for(let w=0,A=c.length;w<A;w++){const _=c[w];f.addGroup(_.groupStart,_.groupCount,w)}u?y=new Pi(f,g):d?y=new li(f,g):y=new Ri(f,g)}else u?y=new Pi(f,g[0]):d?y=new li(f,g[0]):y=new Ri(f,g[0]);y.name=o.name,n.add(y)}else if(e.vertices.length>0){const r=new Ut({size:1,sizeAttenuation:!1}),l=new Ft;l.setAttribute("position",new ht(e.vertices,3)),e.colors.length>0&&e.colors[0]!==void 0&&(l.setAttribute("color",new ht(e.colors,3)),r.vertexColors=!0);const o=new li(l,r);n.add(o)}return n}}const Ki=new Js,$s=document.querySelector("canvas.webgl"),ct=new THREE.Scene,Qs=new THREE.TextureLoader().load("portrait.jpg"),Ks={color:16772589,emmisive:16711680,shininess:100,specular:16772589,refractionRatio:.5},Et=new THREE.MeshPhongMaterial(Ks),tn={color:16772589,emmisive:16711680,shininess:100,specular:16772589,refractionRatio:.2,map:Qs},en=new THREE.MeshPhongMaterial(tn),Le=new THREE.Mesh(new THREE.TorusGeometry(1,.4,16,60),Et),Pe=new THREE.Mesh(new THREE.BoxGeometry(2,2,2),en),Ve=new THREE.Mesh(new THREE.TorusKnotGeometry(.8,.32,100,20),Et),Oe=new THREE.Mesh(new THREE.TubeGeometry(new THREE.CatmullRomCurve3([new THREE.Vector3(-1,0,1),new THREE.Vector3(-.5,.5,.5),new THREE.Vector3(0,0,0),new THREE.Vector3(.5,-.5,.5),new THREE.Vector3(1,0,1),new THREE.Vector3(1.5,.5,.5)]),64,.3,32,!1),Et),sn=new THREE.TextureLoader().load("moon.jpg"),nn=new THREE.TextureLoader().load("normal.jpg"),Kt=new THREE.Mesh(new THREE.SphereGeometry(1,32,32),new THREE.MeshStandardMaterial({map:sn,normalMap:nn}));Kt.position.z=0;ct.add(Le,Pe,Ve,Oe,Kt);const tt=4;Le.position.y=-tt*0;Pe.position.y=-tt*1;Ve.position.y=-tt*2;Oe.position.y=-tt*5;Kt.position.y=-tt*6;Le.position.x=2;Pe.position.x=-7;Ve.position.x=2;Oe.position.x=-2;Kt.position.x=2;let j=[Le,Pe,Ve,Oe,Kt];const rn=new THREE.TextureLoader().load("./mustang_texture.jpg");let Ui;Ki.load("./mustang.obj",function(p){console.log("This is the mustang: "+p.children.forEach(e=>{console.log(e);try{e.material=Et,console.log("Set the texture")}catch(i){console.log(i)}})),p.position.x=-2,p.position.y=-tt*3.2;let t=.65;p.scale.set(t,t,t),p.traverse(function(e){e instanceof THREE.Mesh&&(e.material=Et,e.material.map=rn,Ui=e,j.push(Ui),console.log("Section meshes: ",j)),ct.add(p)},function(e){console.log(e.loaded/e.total*100+"% loaded")},function(e){console.log("An error happened"),console.log(e)})});const an=new THREE.TextureLoader().load("./22V10_label.jpg");let Xi;Ki.load("./22V10.obj",function(p){console.log("This is the chip: "+p.children.forEach(e=>{console.log(e);try{e.material=Et,console.log("Set the chip texture")}catch(i){console.log(i)}})),p.position.x=2.4,p.position.y=-tt*4;let t=.5;p.scale.set(t,t,t),p.rotation.set(0,.6,.25),p.traverse(function(e){e instanceof THREE.Mesh&&(e.material=Et,e.material.map=an,Xi=e,j.push(Xi),console.log("Section meshes: ",j)),ct.add(p)},function(e){console.log(e.loaded/e.total*100+"% loaded")},function(e){console.log("An error happened"),console.log(e)})});const ts=500,Vt=4,ke=new Float32Array(ts*Vt);for(let p=0;p<ts;p++)ke[p*Vt+0]=(Math.random()-.5)*10,ke[p*Vt+1]=tt*.5-Math.random()*tt*(Vt+4),ke[p*Vt+2]=(Math.random()-.5)*10;const es=new THREE.BufferGeometry;es.setAttribute("position",new THREE.BufferAttribute(ke,Vt));const on=new THREE.PointsMaterial({color:"#ffeded",sizeAttenuation:!0,size:.03}),hn=new THREE.Points(es,on);ct.add(hn);const is=new THREE.DirectionalLight("#ffffff",1);is.position.set(1,1,0);ct.add(is);const ss=new THREE.DirectionalLight("#ffffff",.04);ss.position.set(1,-1,5);ct.add(ss);const ns=new THREE.AmbientLight("#ffffff",.12);ns.position.set(-1,-1,0);ct.add(ns);const V={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{V.width=window.innerWidth,V.height=window.innerHeight,O.aspect=V.width/V.height,O.updateProjectionMatrix(),Yt.setSize(V.width,V.height),Yt.setPixelRatio(Math.min(window.devicePixelRatio,2))});const L=new THREE.Group;ct.add(L);const O=new THREE.PerspectiveCamera(35,V.width/V.height,.1,100);O.position.z=6;L.add(O);O.position.x;O.position.y;const Yt=new THREE.WebGLRenderer({canvas:$s,alpha:!0});Yt.setSize(V.width,V.height);Yt.setPixelRatio(Math.min(window.devicePixelRatio,2));let ve=window.scrollY,T=0,Be=!1;window.addEventListener("scroll",()=>{ve=window.scrollY;const p=Math.round(ve/V.height);if(T!=p){if(console.log({scrollY:ve,currentSection:T,newSection:p}),T=p,T!=1&&gsap.to(j[T].rotation,{duration:3,ease:"power2.inOut",x:"+=6",y:"+=3"}),T==1?Be||(Be=!0,j[T].rotation.y=Math.PI*.5,gsap.to(j[1].position,{duration:1.5,ease:"power2.inOut",x:-2})):Be&&(Be=!1,gsap.to(j[1].position,{duration:1,ease:"power2.inOut",x:-7})),T==2){L.rotation.y=0;let t=L.rotation.y;gsap.to(L.rotation,{duration:1,ease:"power2.inOut",x:0,y:0});let e=T*Math.PI,i=e-t;console.log({currentCameraRotation:t,targetRotation:e,rotationDifference:i}),gsap.to(L.rotation,{duration:3,ease:"power2.inOut",y:t-i}),L.rotation.y=t}T==6&&gsap.to(j[T].rotation,{duration:3,ease:"power2.inOut",x:"+=6",y:"+=3"})}});const Nt={};Nt.x=0;Nt.y=0;window.addEventListener("mousemove",p=>{Nt.x=p.clientX/V.width-.5,Nt.y=p.clientY/V.height-.5});let ui=!1;window.addEventListener("click",()=>{if(T==0){let p=L.rotation.y,e=T*Math.PI*2-p;gsap.to(L.rotation,{duration:1.5,ease:"power2.inOut",y:p+e})}if(T==1){let p=j[1].rotation.y,e=T*Math.PI*2-p;gsap.to(j[1].rotation,{duration:1.5,ease:"power2.inOut",y:p+e})}if(T==2){L.rotation.y=0;let p=L.rotation.y,e=T*Math.PI-p;gsap.to(L.rotation,{duration:3,ease:"power2.inOut",y:p+e})}T==6&&console.log("SECTION 6"),T==7&&(ui?(gsap.to(O.position,{duration:5,ease:"power2.inOut",z:10,y:0,x:0,onComplete:()=>{O.position.z=10,O.position.y=0,O.position.x=0}}),ui=!1):(gsap.to(O.position,{duration:5,ease:"power2.inOut",z:50,y:100,x:0}),gsap.to(O.position,{duration:5,ease:"power2.inOut",y:1500*5}),ui=!0))});const ln=new THREE.Clock;let Yi=0;const rs=()=>{const p=ln.getElapsedTime(),t=p-Yi;Yi=p;for(const s of j)s?(s!=j[1]&&(s.rotation.x+=t*.1),s.rotation.y+=t*.12):console.log("undefined @ "+s);O.position.y=-ve/V.height*tt;const e=Nt.x*.5,i=-Nt.y*.5;L.position.x+=(e-L.position.x)*4*t,L.position.y+=(i-L.position.y)*4*t,Yt.render(ct,O),window.requestAnimationFrame(rs)};rs();
